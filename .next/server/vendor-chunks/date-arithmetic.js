"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/date-arithmetic";
exports.ids = ["vendor-chunks/date-arithmetic"];
exports.modules = {

/***/ "./react-big-calendar/node_modules/date-arithmetic/index.cjs.js":
/*!**********************************************************************!*\
  !*** ./react-big-calendar/node_modules/date-arithmetic/index.cjs.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nvar MILI    = 'milliseconds'\n  , SECONDS = 'seconds'\n  , MINUTES = 'minutes'\n  , HOURS   = 'hours'\n  , DAY     = 'day'\n  , WEEK    = 'week'\n  , MONTH   = 'month'\n  , YEAR    = 'year'\n  , DECADE  = 'decade'\n  , CENTURY = 'century';\n\nvar multiplierMilli = {\n  'milliseconds': 1,\n  'seconds': 1000,\n  'minutes': 60 * 1000,\n  'hours': 60 * 60 * 1000,\n  'day': 24 * 60 * 60 * 1000,\n  'week': 7 * 24 * 60 * 60 * 1000 \n};\n\nvar multiplierMonth = {\n  'month': 1,\n  'year': 12,\n  'decade': 10 * 12,\n  'century': 100 * 12\n};\n\nfunction daysOf(year) {\n  return [31, daysInFeb(year), 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n}\n\nfunction daysInFeb(year) {\n  return (\n      year % 4 === 0 \n      && year % 100 !== 0\n    ) || year % 400 === 0\n      ? 29\n      : 28\n}\n\nfunction add(d, num, unit) {\n  d = new Date(d);\n\n  switch (unit){\n    case MILI:\n    case SECONDS:\n    case MINUTES:\n    case HOURS:\n    case DAY:\n    case WEEK:\n      return addMillis(d, num * multiplierMilli[unit])\n    case MONTH:\n    case YEAR:\n    case DECADE:\n    case CENTURY:\n      return addMonths(d, num * multiplierMonth[unit])\n  }\n\n  throw new TypeError('Invalid units: \"' + unit + '\"')\n}\n\nfunction addMillis(d, num) {\n  var nextDate = new Date(+(d) + num);\n\n  return solveDST(d, nextDate)\n}\n\nfunction addMonths(d, num) {\n  var year = d.getFullYear()\n    , month = d.getMonth()\n    , day = d.getDate()\n    , totalMonths = year * 12 + month + num\n    , nextYear = Math.trunc(totalMonths / 12)\n    , nextMonth = totalMonths % 12\n    , nextDay = Math.min(day, daysOf(nextYear)[nextMonth]);\n\n  var nextDate = new Date(d);\n  nextDate.setFullYear(nextYear);\n\n  // To avoid a bug when sets the Feb month\n  // with a date > 28 or date > 29 (leap year)\n  nextDate.setDate(1);\n\n  nextDate.setMonth(nextMonth);\n  nextDate.setDate(nextDay);\n\n  return nextDate\n}\n\nfunction solveDST(currentDate, nextDate) {\n  var currentOffset = currentDate.getTimezoneOffset()\n    , nextOffset = nextDate.getTimezoneOffset();\n\n  // if is DST, add the difference in minutes\n  // else the difference is zero\n  var diffMinutes = (nextOffset - currentOffset);\n\n  return new Date(+(nextDate) + diffMinutes * multiplierMilli['minutes'])\n}\n\nfunction subtract(d, num, unit) {\n  return add(d, -num, unit)\n}\n\nfunction startOf(d, unit, firstOfWeek) {\n  d = new Date(d);\n\n  switch (unit) {\n    case CENTURY:\n    case DECADE:\n    case YEAR:\n        d = month(d, 0);\n    case MONTH:\n        d = date(d, 1);\n    case WEEK:\n    case DAY:\n        d = hours(d, 0);\n    case HOURS:\n        d = minutes(d, 0);\n    case MINUTES:\n        d = seconds(d, 0);\n    case SECONDS:\n        d = milliseconds(d, 0);\n  }\n\n  if (unit === DECADE)\n    d = subtract(d, year(d) % 10, 'year');\n\n  if (unit === CENTURY)\n    d = subtract(d, year(d) % 100, 'year');\n\n  if (unit === WEEK)\n    d = weekday(d, 0, firstOfWeek);\n\n  return d\n}\n\nfunction endOf(d, unit, firstOfWeek){\n  d = new Date(d);\n  d = startOf(d, unit, firstOfWeek);\n  switch (unit) {\n    case CENTURY:\n    case DECADE:\n    case YEAR:\n    case MONTH:\n    case WEEK:\n      d = add(d, 1, unit);\n      d = subtract(d, 1, DAY);\n      d.setHours(23, 59, 59, 999);\n      break;\n    case DAY:\n      d.setHours(23, 59, 59, 999);\n      break;\n    case HOURS:\n    case MINUTES:\n    case SECONDS:\n      d = add(d, 1, unit);\n      d = subtract(d, 1, MILI);\n  }\n  return d\n}\n\nvar eq =  createComparer(function(a, b){ return a === b });\nvar neq = createComparer(function(a, b){ return a !== b });\nvar gt =  createComparer(function(a, b){ return a > b });\nvar gte = createComparer(function(a, b){ return a >= b });\nvar lt =  createComparer(function(a, b){ return a < b });\nvar lte = createComparer(function(a, b){ return a <= b });\n\nfunction min(){\n  return new Date(Math.min.apply(Math, arguments))\n}\n\nfunction max(){\n  return new Date(Math.max.apply(Math, arguments))\n}\n\nfunction inRange(day, min, max, unit){\n  unit = unit || 'day';\n\n  return (!min || gte(day, min, unit))\n      && (!max || lte(day, max, unit))\n}\n\nvar milliseconds = createAccessor('Milliseconds');\nvar seconds =      createAccessor('Seconds');\nvar minutes =      createAccessor('Minutes');\nvar hours =        createAccessor('Hours');\nvar day =          createAccessor('Day');\nvar date =         createAccessor('Date');\nvar month =        createAccessor('Month');\nvar year =         createAccessor('FullYear');\n\nfunction decade(d, val) {\n  return val === undefined\n    ? year(startOf(d, DECADE))\n    : add(d, val + 10, YEAR);\n}\n\nfunction century(d, val) {\n  return val === undefined\n    ? year(startOf(d, CENTURY))\n    : add(d, val + 100, YEAR);\n}\n\nfunction weekday(d, val, firstDay) {\n    var w = (day(d) + 7 - (firstDay || 0) ) % 7;\n\n    return val === undefined\n      ? w\n      : add(d, val - w, DAY);\n}\n\nfunction diff(date1, date2, unit, asFloat) {\n  var dividend, divisor, result;\n\n  switch (unit) {\n    case MILI:\n    case SECONDS:\n    case MINUTES:\n    case HOURS:\n    case DAY:\n    case WEEK:\n      dividend = date2.getTime() - date1.getTime(); break;\n    case MONTH:\n    case YEAR:\n    case DECADE:\n    case CENTURY:\n      dividend = (year(date2) - year(date1)) * 12 + month(date2) - month(date1); break;\n    default:\n      throw new TypeError('Invalid units: \"' + unit + '\"');\n  }\n\n  switch (unit) {\n    case MILI:\n        divisor = 1; break;\n    case SECONDS:\n        divisor = 1000; break;\n    case MINUTES:\n        divisor = 1000 * 60; break;\n    case HOURS:\n        divisor = 1000 * 60 * 60; break;\n    case DAY:\n        divisor = 1000 * 60 * 60 * 24; break;\n    case WEEK:\n        divisor = 1000 * 60 * 60 * 24 * 7; break;\n    case MONTH:\n        divisor = 1; break;\n    case YEAR:\n        divisor = 12; break;\n    case DECADE:\n        divisor = 120; break;\n    case CENTURY:\n        divisor = 1200; break;\n    default:\n      throw new TypeError('Invalid units: \"' + unit + '\"');\n  }\n\n  result = dividend / divisor;\n\n  return asFloat ? result : Math.round(result);\n}\n\nfunction createAccessor(method){\n  var hourLength = (function(method) {  \n    switch(method) {\n      case 'Milliseconds':\n        return 3600000;\n      case 'Seconds':\n        return 3600;\n      case 'Minutes':\n        return 60;\n      case 'Hours':\n        return 1;\n      default:\n        return null;\n    }\n  })(method);\n  \n  return function(d, val){\n    if (val === undefined)\n      return d['get' + method]()\n\n    var dateOut = new Date(d);\n    dateOut['set' + method](val);\n    \n    if(hourLength && dateOut['get'+method]() != val && (method === 'Hours' || val >=hourLength && (dateOut.getHours()-d.getHours()<Math.floor(val/hourLength))) ){\n      //Skip DST hour, if it occurs\n      dateOut['set'+method](val+hourLength);\n    }\n    \n    return dateOut\n  }\n}\n\nfunction createComparer(operator) {\n  return function (a, b, unit) {\n    return operator(+startOf(a, unit), +startOf(b, unit))\n  };\n}\n\nexports.add = add;\nexports.century = century;\nexports.date = date;\nexports.day = day;\nexports.decade = decade;\nexports.diff = diff;\nexports.endOf = endOf;\nexports.eq = eq;\nexports.gt = gt;\nexports.gte = gte;\nexports.hours = hours;\nexports.inRange = inRange;\nexports.lt = lt;\nexports.lte = lte;\nexports.max = max;\nexports.milliseconds = milliseconds;\nexports.min = min;\nexports.minutes = minutes;\nexports.month = month;\nexports.neq = neq;\nexports.seconds = seconds;\nexports.startOf = startOf;\nexports.subtract = subtract;\nexports.weekday = weekday;\nexports.year = year;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./react-big-calendar/node_modules/date-arithmetic/index.cjs.js\n");

/***/ })

};
;